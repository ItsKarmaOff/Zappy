############################ CONFIGURATION ####################################
name: Zappy

on: [push, pull_request]

env:
    EXECUTABLE: zappy_server,zappy_gui,zappy_ia
###############################################################################



############################ JOBS #############################################
jobs:

    ######################## COMMIT ###########################################
    protect_main_branch:
        if: github.ref == 'refs/heads/main'
        runs-on: ubuntu-latest

        #################### STEPS ############################################
        steps:
            - name: Checkout
              uses: actions/checkout@v4.1.1

            #- name: Launch commit name checker
            #  run: |
            #    .github/scripts/check_main_branch
            - name: Check if direct push to main
              env:
                  COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
                  PUSHER: ${{ github.event.pusher.name }}
              run: |
                echo "::debug::Commit message: $COMMIT_MESSAGE"
                echo "::debug::Pusher: $PUSHER"
                echo "::debug::Event: ${{ github.event_name }}"
                
                ## Count commits in this push using git
                COMMITS_COUNT=$(git rev-list --count HEAD^..HEAD 2>/dev/null || echo "1")
                echo "::debug::Commits in push: $COMMITS_COUNT"
                
                # Check if it's a merge commit based on message patterns
                if [[ "$COMMIT_MESSAGE" =~ ^Merge.* ]]; then
                  if [[ "$COMMIT_MESSAGE" =~ .*dev.* ]] || [[ "$COMMIT_MESSAGE" =~ .*pull.request.* ]]; then
                    echo "✅ Merge from dev or PR detected - allowed"
                    exit 0
                  else
                    echo "❌ Merge detected but not from dev branch"
                    echo "::error title=Invalid Merge::Please merge only from 'dev' to 'main'"
                    exit 1
                  fi
                fi
                
                # Check for direct commits
                echo "❌ Direct commit to main branch detected!"
                echo "::error title=Direct Commit::Direct commit to main branch is not allowed!"
                echo "::error title=Direct Commit::Please create a branch from 'dev' and submit a Pull Request"
                echo "::error title=Direct Commit::Commit message: $COMMIT_MESSAGE"
                exit 1
          ###########################################################################

    ######################## COMMIT ###########################################
    check_commit:
        runs-on: ubuntu-latest
        #needs: protect_main_branch
        #if: always() && (needs.protect-main.result == 'success' || needs.protect-main.result == 'skipped')

        #################### STEPS ############################################
        steps:
            - name: Checkout
              uses: actions/checkout@v4.1.1

            - name: Launch commit name checker
              run: |
                COMMIT_MSG=$(git log --format="%s" -1)
                .github/scripts/check_commit "$COMMIT_MSG"
    ###########################################################################

    ######################## CODING-STYLE #####################################
    check_coding_style:
        runs-on: ubuntu-latest
        container:
            image: ghcr.io/epitech/coding-style-checker:latest
        needs: check_commit

        #################### STEPS ############################################
        steps:
            - name: Checkout
              uses: actions/checkout@v4.1.1

            - name: Launch coding style checker
              run: check.sh $(pwd) $(pwd)
            - name: Check coding style
              run: |
                cat coding-style-reports.log;
                .github/scripts/display_coding_style
    ###########################################################################


    ######################## PROGRAM-CHECK ####################################
    check_program_compilation:
        runs-on: ubuntu-latest
        container:
            image: epitechcontent/epitest-docker
        needs: check_coding_style

        #################### STEPS ############################################
        steps:
            - name: Checkout
              uses: actions/checkout@v4.1.1

            - name: Compile SERVER
              run: make zappy_server
              timeout-minutes: 2
            - name: Compile GUI
              run: make zappy_gui
              timeout-minutes: 2
            - name: Compile IA
              run: make zappy_ai
              timeout-minutes: 2

            - name: Launch "make clean"
              run: make clean
            #- name: Check program compilation
            #  run: .github/scripts/check_program_compilation ${{ env.EXECUTABLE }}

            - name: Launch "make tests_run"
              run: make tests_run
              timeout-minutes: 2
###############################################################################
